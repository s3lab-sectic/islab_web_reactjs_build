{"version":3,"sources":["pages/objective/Objective.style.js","pages/objective/Objective.js"],"names":["styled","div","props","theme","border","bgColor_2","primary","sizeInfo","text","colorArray","color","primary_o","light_o","black_o","Objective","containerCanvas","useRef","CloudRef","cloudInfoRef","AIRef","AIInfoRef","IOTRef","IOTInfoRef","BigDataRef","BigDataInfoRef","useState","size","setSize","useLayoutEffect","updateSize","bounding","current","getBoundingClientRect","width","height","getPosElement","window","addEventListener","removeEventListener","useEffect","canvas","document","querySelector","maxWidth","maxHeight","gl","getContext","Circle","x","y","dx","dy","radius","this","minRadius","draw","beginPath","arc","Math","PI","fillStyle","fill","update","circleArray","index","floor","random","length","push","init","animate","requestAnimationFrame","clearRect","element","elementOrigin","style","top","left","openInfo","zIndex","classList","add","closeInfo","remove","setTimeout","className","ref","id","onClick"],"mappings":"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","file":"static/js/8.cf30f283.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport default styled.div`\r\nheight: 100vh;\r\noverflow-y: auto;\r\nborder-left: 1px solid ${props => props.theme.border};\r\nbackground-color: ${props => props.theme.bgColor_2};\r\n@media (max-width: 993px){\r\n    border-left: none;\r\n}\r\n.wrap-background-fixed{\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    opacity: .1;\r\n}\r\n.wrap-objective{\r\n    grid-template-columns: 1fr 1fr 1fr 1fr;\r\n    gap: 20px;\r\n    padding: 20px;\r\n    width: 100%;\r\n    margin: auto;\r\n    @media (max-width: 1170px) {\r\n        grid-template-columns: 1fr 1fr;\r\n        width: 500px;\r\n    }\r\n    .card{\r\n        position: relative;\r\n        padding-top: 100%;\r\n        width: 100%;\r\n        border-radius: 50%;\r\n        -webkit-box-shadow: -2px 5px 31px 0px rgba(19,94,169,0.1); \r\n        box-shadow: -2px 5px 31px 0px rgba(19,94,169,0.1);\r\n        background-color: ${props => props.theme.bgColor_2};\r\n        cursor: pointer;\r\n        transition: .5s;\r\n        transform: translateY(0px);\r\n        &:hover{\r\n            transform: translateY(-8px);\r\n        }\r\n        .card-content{\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            right: 0;\r\n            bottom: 0;\r\n            .icon{\r\n                margin-bottom: 10px;\r\n            }\r\n            .text{\r\n                p{\r\n                    font-size: 16px;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n@media(max-width: 501px) {\r\n    .wrap-objective{\r\n        grid-template-columns: 1fr 1fr;\r\n        width: 300px;\r\n        .card{\r\n            .card-content{\r\n                .icon{\r\n                    margin-bottom: 0;\r\n                    svg{\r\n                        width: 40px;\r\n                        height: 40px;\r\n                    }\r\n                }\r\n                .text{\r\n                    p{\r\n                        font-size: 11px;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n.wrap-info{\r\n    position: fixed;\r\n    background-color: ${props => props.theme.bgColor_2};\r\n    border-radius: 50%;\r\n    transition: .3s;\r\n    z-index: -1;\r\n    overflow: hidden;\r\n    border: 1px solid #ffffff00;\r\n    padding: 30px;\r\n    .content{\r\n        opacity: 0;\r\n        transform: translateY(10px);\r\n        width: 100%;\r\n        height: 100%;\r\n        .close-icon{\r\n            position: absolute;\r\n            top: 20px;\r\n            right: 20px;\r\n            cursor: pointer;\r\n            transition: .5s;\r\n            transform: rotate(0deg);\r\n            &:hover{\r\n                transform: rotate(360deg);\r\n                path {\r\n                    fill: ${props => props.theme.primary};\r\n                }\r\n            }\r\n        }\r\n        @media (max-width: 415px) {\r\n            .close-icon{\r\n                top: 0;\r\n                right: 0;\r\n                svg{\r\n                    width: 20px;\r\n                    height: 20px;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    &.active{\r\n        border-radius: 20px;\r\n        top: 150px!important;\r\n        left: 350px!important;\r\n        width: ${props => props.sizeInfo[0] - 100}px!important;\r\n        height: ${props => props.sizeInfo[1] - 300}px!important;\r\n        border: 1px solid ${props => props.theme.border};\r\n        .content{\r\n            opacity: 1;\r\n            transform: translateY(0px);\r\n            transition: .5s;\r\n            transition-delay: .2s;\r\n            p{\r\n                font-style: italic;\r\n                font-size: 14px;\r\n                color: ${props => props.theme.text};\r\n            }\r\n            p.source{\r\n                text-align: right;\r\n                margin-top: 15px;\r\n                color: ${props => props.theme.primary};\r\n            }\r\n        }\r\n        @media(max-width: 993px) {\r\n            left: 50px!important;\r\n        }\r\n        @media (max-width: 415px) {\r\n            top: 100px!important;\r\n            height: ${props => props.sizeInfo[1] - 200}px!important;\r\n        }\r\n        @media (max-width: 321px) {\r\n            padding: 10px;\r\n            top: 50px!important;\r\n            height: ${props => props.sizeInfo[1] - 100}px!important;\r\n        }\r\n    }\r\n}\r\n`;","import React, { useRef, useState, useEffect, useLayoutEffect } from 'react';\r\nimport ObjectiveStyles from './Objective.style';\r\nimport {\r\n    IconIOT,\r\n    IconAI,\r\n    IconCloudComputing,\r\n    IconBigData,\r\n    IconClose\r\n} from './../../utilities/SVG';\r\nimport { color } from './../../utilities/constants';\r\n\r\nvar maxRadius = 30;\r\nvar minRadius = 80;\r\nvar colorArray = [\r\n    color.primary,\r\n    color.primary_o,\r\n    color.light_o,\r\n    color.black_o,\r\n]\r\n\r\nconst Objective = (props) => {\r\n    const {\r\n        theme\r\n    } = props;\r\n\r\n    const containerCanvas = useRef(null);\r\n    const CloudRef = useRef(null);\r\n    const cloudInfoRef = useRef(null);\r\n    const AIRef = useRef(null);\r\n    const AIInfoRef = useRef(null);\r\n    const IOTRef = useRef(null);\r\n    const IOTInfoRef = useRef(null);\r\n    const BigDataRef = useRef(null);\r\n    const BigDataInfoRef = useRef(null);\r\n\r\n    const [size, setSize] = useState([0, 0]);\r\n    useLayoutEffect(() => {\r\n        function updateSize() {\r\n            let bounding = containerCanvas.current.getBoundingClientRect();\r\n            setSize([bounding.width, bounding.height]);\r\n            getPosElement(cloudInfoRef, CloudRef);\r\n            getPosElement(AIInfoRef, AIRef);\r\n            getPosElement(IOTInfoRef, IOTRef);\r\n            getPosElement(BigDataInfoRef, BigDataRef);\r\n        }\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        var canvas = document.querySelector('#background-animation');\r\n        const maxWidth = size[0];\r\n        const maxHeight = size[1];\r\n\r\n        canvas.width = maxWidth;\r\n        canvas.height = maxHeight;\r\n\r\n        var gl = canvas.getContext('2d');\r\n\r\n        function Circle(x, y, dx, dy, radius, color) {\r\n            this.x = x;\r\n            this.y = y;\r\n            this.dx = dx;\r\n            this.dy = dy;\r\n            this.radius = radius;\r\n            this.minRadius = radius;\r\n            this.color = color;\r\n            this.draw = () => {\r\n                gl.beginPath();\r\n                gl.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\r\n                // gl.strokeStyle = this.color;\r\n                // gl.stroke();\r\n                gl.fillStyle = this.color;\r\n                gl.fill();\r\n            }\r\n            this.update = () => {\r\n                if (this.x + this.radius > maxWidth || this.x - this.radius < 0) {\r\n                    this.dx = -this.dx;\r\n                }\r\n\r\n                if (this.y + this.radius > maxHeight || this.y - this.radius < 0) {\r\n                    this.dy = -this.dy;\r\n                }\r\n\r\n                this.x += this.dx;\r\n                this.y += this.dy;\r\n\r\n                this.draw();\r\n            }\r\n        }\r\n\r\n        var circleArray = [];\r\n\r\n        function animate() {\r\n            requestAnimationFrame(animate);\r\n            gl.clearRect(0, 0, maxWidth, maxHeight); // clear toàn bộ nội dung trong khung canvas, clear các hình trước đó.\r\n\r\n            for (let index = 0; index < circleArray.length; index++) {\r\n                circleArray[index].update();\r\n            }\r\n        }\r\n\r\n        function init() {\r\n            circleArray = []; // reset\r\n            for (let index = 0; index < 10; index++) {\r\n                var radius = Math.floor(Math.random() * 4 + minRadius);\r\n                var x = Math.random() * (maxWidth - radius * 2) + radius;\r\n                var y = Math.random() * (maxHeight - radius * 2) + radius;\r\n                var dx = (Math.random() - 0.5) + 1;\r\n                var dy = (Math.random() - 0.5) + 1;\r\n                // var color = '#' + (0x1000000 + (Math.random()) * 0xffffff).toString(16).substr(1, 6);\r\n                var color = colorArray[Math.floor(Math.random() * colorArray.length)];\r\n                circleArray.push(new Circle(x, y, dx, dy, radius, color));\r\n            }\r\n        }\r\n\r\n        init();\r\n        animate();\r\n    }, [size])\r\n\r\n    const getPosElement = (element, elementOrigin) => {\r\n        let bounding = elementOrigin.current.getBoundingClientRect();\r\n        element.current.style.top = bounding.top + 'px';\r\n        element.current.style.left = bounding.left + 'px';\r\n        element.current.style.width = bounding.width + 'px';\r\n        element.current.style.height = bounding.height + 'px';\r\n    }\r\n\r\n    const openInfo = (element) => {\r\n        element.current.style.zIndex = '10';\r\n        element.current.classList.add('active');\r\n    }\r\n\r\n    const closeInfo = (element) => {\r\n        element.current.classList.remove('active');\r\n        setTimeout(() => {\r\n            element.current.style.zIndex = '-1';\r\n        }, 100)\r\n        \r\n    }\r\n\r\n    return (\r\n        <ObjectiveStyles className='d-flex align-items-center pos-relative' sizeInfo={size} >\r\n            <div className=\"wrap-background-fixed\" ref={containerCanvas}>\r\n                <canvas id='background-animation'></canvas>\r\n            </div>\r\n            <div className=\"container pos-relative\">\r\n                <div className=\"wrap-objective grid-container\">\r\n                    <div className=\"card\" ref={CloudRef} onClick={() => openInfo(cloudInfoRef)}>\r\n                        <div className=\"card-content d-flex align-items-center justify-content-center flex-column\">\r\n                            <div className=\"icon text-center\">\r\n                                <IconCloudComputing color={theme.primary} width={50} height={50} />\r\n                            </div>\r\n                            <div className=\"text\">\r\n                                <p className=\"text-center\">Cloud Computing</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card\" ref={AIRef} onClick={() => openInfo(AIInfoRef)}>\r\n                        <div className=\"card-content d-flex align-items-center justify-content-center flex-column\">\r\n                            <div className=\"icon text-center\">\r\n                                <IconAI color={theme.primary} width={50} height={50} />\r\n                            </div>\r\n                            <div className=\"text\">\r\n                                <p className=\"text-center\">Artificial Intelligence</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card\" ref={IOTRef} onClick={() => openInfo(IOTInfoRef)}>\r\n                        <div className=\"card-content d-flex align-items-center justify-content-center flex-column\">\r\n                            <div className=\"icon text-center\">\r\n                                <IconIOT color={theme.primary} width={50} height={50} />\r\n                            </div>\r\n                            <div className=\"text\">\r\n                                <p className=\"text-center\">Internet of Things</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card\" ref={BigDataRef} onClick={() => openInfo(BigDataInfoRef)}>\r\n                        <div className=\"card-content d-flex align-items-center justify-content-center flex-column\">\r\n                            <div className=\"icon text-center\">\r\n                                <IconBigData color={theme.primary} width={50} height={50} />\r\n                            </div>\r\n                            <div className=\"text\">\r\n                                <p className=\"text-center\">Big Data</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"wrap-info\" ref={cloudInfoRef}>\r\n                <div className=\"content d-flex justify-content-center flex-column\">\r\n                    <div className=\"close-icon\"\r\n                        onClick={() => closeInfo(cloudInfoRef)}\r\n                    >\r\n                        <IconClose color={theme.text} width={40} height={40} />\r\n                    </div>\r\n                    <p className=\"text-center\">\"Điện toán đám mây (tiếng Anh: Cloud Computing), còn gọi là điện toán máy chủ ảo, là mô hình điện toán sử dụng các công nghệ máy tính và phát triển dựa vào mạng Internet. Thuật ngữ \"đám mây\" ở đây là lối nói ẩn dụ chỉ mạng Internet (dựa vào cách được bố trí của nó trong sơ đồ mạng máy tính) và như sự liên tưởng về độ phức tạp của các cơ sở hạ tầng chứa trong nó.\"</p>\r\n                    <p className='source'>Source: Wikipedia</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"wrap-info\" ref={AIInfoRef}>\r\n                <div className=\"content d-flex justify-content-center flex-column\">\r\n                    <div className=\"close-icon\"\r\n                        onClick={() => closeInfo(AIInfoRef)}\r\n                    >\r\n                        <IconClose color={theme.text} width={40} height={40} />\r\n                    </div>\r\n                    <p className=\"text-center\">\"Trong khoa học máy tính, trí tuệ nhân tạo hay AI (tiếng Anh: Artificial Intelligence), đôi khi được gọi là trí thông minh nhân tạo, là trí thông minh được thể hiện bằng máy móc, trái ngược với trí thông minh tự nhiên của con người. Thông thường, thuật ngữ \"trí tuệ nhân tạo\" thường được sử dụng để mô tả các máy móc (hoặc máy tính) có khả năng bắt chước các chức năng \"nhận thức\" mà con người thường phải liên kết với tâm trí, như \"học tập\" và \"giải quyết vấn đề\".\"</p>\r\n                    <p className='source'>Source: Wikipedia</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"wrap-info\" ref={IOTInfoRef}>\r\n                <div className=\"content d-flex justify-content-center flex-column\">\r\n                    <div className=\"close-icon\"\r\n                        onClick={() => closeInfo(IOTInfoRef)}\r\n                    >\r\n                        <IconClose color={theme.text} width={40} height={40} />\r\n                    </div>\r\n                    <p className=\"text-center\">\"Internet Vạn Vật, hay cụ thể hơn là Mạng lưới vạn vật kết nối Internet hoặc là Mạng lưới thiết bị kết nối Internet (tiếng Anh: Internet of Things, viết tắt IoT) là một liên mạng, trong đó các thiết bị, phương tiện vận tải (được gọi là \"thiết bị kết nối\" và \"thiết bị thông minh\"), phòng ốc và các trang thiết bị khác được nhúng với các bộ phận điện tử, phần mềm, cảm biến, cơ cấu chấp hành cùng với khả năng kết nối mạng máy tính giúp cho các thiết bị này có thể thu thập và truyền tải dữ liệu.\"</p>\r\n                    <p className='source'>Source: Wikipedia</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"wrap-info\" ref={BigDataInfoRef}>\r\n                <div className=\"content d-flex justify-content-center flex-column\">\r\n                    <div className=\"close-icon\"\r\n                        onClick={() => closeInfo(BigDataInfoRef)}\r\n                    >\r\n                        <IconClose color={theme.text} width={40} height={40} />\r\n                    </div>\r\n                    <p className=\"text-center\">\"Dữ liệu lớn (Tiếng Anh: Big data) là một thuật ngữ cho việc xử lý một tập hợp dữ liệu rất lớn và phức tạp mà các ứng dụng xử lý dữ liệu truyền thống không xử lý được. Dữ liệu lớn bao gồm các thách thức như phân tích, thu thập, giám sát dữ liệu, tìm kiếm, chia sẻ, lưu trữ, truyền nhận, trực quan, truy vấn và tính riêng tư.\"</p>\r\n                    <p className='source'>Source: Wikipedia</p>\r\n                </div>\r\n            </div>\r\n        </ObjectiveStyles>\r\n    )\r\n}\r\n\r\nexport default Objective;\r\n"],"sourceRoot":""}